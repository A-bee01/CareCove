{"file":"donate-Itpw1yNl.js","mappings":"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","names":["offering"],"sources":["../../../../pages/donate.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col min-h-screen\">\n    <Header />\n    <main class=\"flex-1 bg-[ffffff] dark:bg-[ffffff] py-8 px-6 md:px-8\">\n      <div class=\"max-w-3xl mx-auto grid gap-8\">\n        <!-- Step 1: Select From and To Currencies, Display Offerings -->\n        <div v-if=\"step === 1\" class=\"bg-white dark:bg-[#10673b] rounded-lg shadow p-6\">\n          <h2 class=\"text-2xl font-bold mb-4 dark:text-white\">Donate To A Cause</h2>\n          <div v-if=\"state.payinCurrencies.length\">\n            <div class=\"mb-4\">\n              <label class=\"block text-gray-700 dark:text-gray-300 mb-2\">From Currency</label>\n              <select v-model=\"fromCurrency\" @change=\"updateToCurrencies\" class=\"w-full p-2 border rounded\">\n                <option disabled value=\"\">Select currency</option>\n                <option v-for=\"currency in state.payinCurrencies\" :key=\"currency\" :value=\"currency\">{{ currency }}</option>\n              </select>\n            </div>\n            <div class=\"mb-4\">\n              <label class=\"block text-gray-700 dark:text-gray-300 mb-2\">To Currency</label>\n              <select v-model=\"toCurrency\" :disabled=\"!isToCurrencyEnabled\" class=\"w-full p-2 border rounded\">\n                <option disabled value=\"\">Select currency</option>\n                <option v-for=\"currency in state.payoutCurrencies\" :key=\"currency\" :value=\"currency\">{{ currency }}</option>\n              </select>\n            </div>\n            <button @click=\"getFilteredOfferings\" class=\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 disabled:bg-gray-800 dark:text-white border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2\">\n              Get Offerings\n            </button>\n          </div>\n\n          <Spinner v-else />\n\n\n          <div v-if=\"filteredOfferings.length\" class=\"mt-4 dark:text-white\">\n            <h2 class=\"text-2xl font-bold mb-4\">Exchange Rate Offerings</h2>\n            <ul>\n              <li v-for=\"offering in filteredOfferings\" :key=\"offering.id\" @click=\"selectOffering(offering)\" class=\"cursor-pointer p-4 border rounded mb-2 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\">\n                <h3 class=\"font-bold\">{{ state.pfiAllowlist.find(pfi => pfi.pfiUri === offering.metadata.from)?.pfiName }}</h3>\n                <p>{{ offering.data.description }}</p>\n                <p class=\"text-blue-500\">{{ offering.data.payoutUnitsPerPayinUnit }} {{ offering.data.payout.currencyCode }} for 1 {{ offering.data.payin.currencyCode }}</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <!-- Step 2: Enter Transaction Details -->\n        <div v-if=\"step === 2\" class=\"bg-white dark:bg-[#10673b] rounded-lg shadow p-6\">\n          <h2 class=\"text-2xl font-bold mb-4 dark:text-white\">Enter Transaction Details</h2>\n          <div class=\"mb-4\">\n          <p v-if=\"!isAmountValid && amount !== ''\" class=\"text-red-500 mt-2\">\n            Amount must be between {{ offering?.data?.payin?.min }} and {{ offering?.data?.payin?.max }}\n          </p>\n            <label class=\"block text-gray-700 dark:text-gray-300 mb-2\">You Send ({{ offering?.data?.payin?.currencyCode }})</label>\n            <input v-model=\"amount\" @input=\"calculateTheyGet\" type=\"number\" required class=\"w-full p-2 border rounded disabled:bg-slate-200\" :class=\"{ 'border-red-500': !isAmountValid && amount !== '' }\" :disabled=\"needsCredentials\" />\n          </div>\n          <div class=\"mb-4\">\n            <label class=\"block text-gray-700 dark:text-gray-300 mb-2\">They Get ({{ offering?.data?.payout?.currencyCode }})</label>\n            <input v-model=\"theyGet\" type=\"number\" disabled class=\"w-full p-2 border rounded disabled:bg-slate-200\" />\n          </div>\n          <div class=\"mb-4 text-gray-700 dark:text-gray-300\">\n            Exchange Rate: {{ offering?.data?.payoutUnitsPerPayinUnit }} {{ offering?.data?.payout?.currencyCode }} for 1 {{ offering?.data?.payin?.currencyCode }}\n          </div>\n          <div v-for=\"(detail, key) in offering?.data?.payout?.methods[0]?.requiredPaymentDetails?.properties\" :key=\"key\" class=\"mb-4\">\n            <label :for=\"key\" class=\"block text-gray-700 dark:text-gray-300 mb-2\">{{ detail.title }}</label>\n            <input v-model=\"paymentDetails[key]\" :id=\"key\" :type=\"detail.type\" :pattern=\"detail.pattern\" required class=\"w-full p-2 border rounded disabled:bg-slate-200\" disabled />\n            <small class=\"block text-gray-500 dark:text-gray-400\">{{ detail.description }}</small>\n          </div>\n          <p class=\"text-xs text-green-400 mb-2 flex\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"green\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"h-5 w-5\"\n              >\n                <path d=\"M20 6 9 17l-5-5\"></path>\n            </svg>\n            Required credentials available.\n          </p>\n          <button v-if=\"needsCredentials\" class=\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 disabled:bg-slate-400 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 mr-2 dark:text-white\" @click=\"navigateTo('/credentials')\">Verify Identity</button>\n          <button v-if=\"!submitLoading\" @click=\"validateAndSubmit\" class=\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 disabled:bg-slate-400 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 dark:text-white\" :disabled=\"needsCredentials\">\n            Request for Quote\n          </button>\n            <Spinner v-else/>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\nimport Header from '~/components/Header.vue';\nimport { useStore } from '~/data_providers/data.js';\nimport { useRouter } from 'vue-router';\nimport Spinner from '~/components/Spinner.vue';\n\nconst router = useRouter();\nconst { state, setOffering, createExchange, formatAmount, deductAmount, filterOfferings, satisfiesOfferingRequirements, getOfferingById } = useStore();\n\nconst step = ref(1);\nconst fromCurrency = ref('');\nconst toCurrency = ref('');\nconst isToCurrencyEnabled = ref(false);\nconst offering = ref(null);\nconst amount = ref('');\nconst theyGet = ref('');\nconst paymentDetails = ref({});\nconst filteredOfferings = ref([]);\nconst needsCredentials = computed(() => !satisfiesOfferingRequirements(offering.value, state.customerCredentials));\nconst isLoadingOfferings = computed(() => state.payinCurrencies.length == 0)\nconst submitLoading = ref(false);\n\nwatch(fromCurrency, () => {\n  updateToCurrencies();\n});\n\nwatch(isLoadingOfferings, () => {\n  checkExistingSelectedOffering();\n});\n\n// Watch for offering to populate paymentDetails with account details\nwatch(() => offering.value, () => {\n  if (offering.value) {\n    NGOsPaymentDetails();\n  }\n});\n\n// Mapping account details\nconst NGOsPaymentDetails = () => {\n  const currencyCode = offering.value.data.payout.currencyCode;\n\n  const dummyData = {\n    GHS: {\n      accountNumber: '1234567890',\n      bankName: 'Ghana Commercial Bank',\n      swiftCode: 'GCB123GH'\n    },\n    KES: {\n      accountNumber: '0987654321',\n      bankName: 'Equity Bank',\n      swiftCode: 'EQBK456KE'\n    },\n    USD: {\n      accountNumber: '111122223333',\n      bankName: 'Wells Fargo',\n      swiftCode: 'WFUS789'\n    },\n    GBP: {\n      accountNumber: '444455556666',\n      bankName: 'Barclays',\n      swiftCode: 'BARCGB22'\n    },\n    NGN: {\n      accountNumber: '777788889999',\n      bankName: 'First Bank Nigeria',\n      swiftCode: 'FBNINGLA'\n    },\n    BTC: {\n      address: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa'\n    },\n    USDC: {\n      address: '0x4e7b1f7c9d3f3f7f3e1e1e1e1e1e1e1e1e1e1e1e'\n    },\n    AUD: {\n      accountNumber: '1234567890',\n      bankName: 'Commonwealth Bank',\n      swiftCode: 'CBA123AU'\n    },\n    MXN: {\n      accountNumber: '0987654321',\n      bankName: 'Banorte',\n      swiftCode: 'BAN456MX'\n    },\n  };\n\n  if (dummyData[currencyCode]) {\n    paymentDetails.value = dummyData[currencyCode];\n  }\n};\n\nconst isAmountValid = computed(() => {\n  if (!offering.value) return true;\n  if(!offering.value.data.payin.max || !offering.value.data.payin.min) return true;\n  const min = offering.value?.data.payin.min;\n  const max = offering.value?.data.payin.max;\n  return amount.value >= min && amount.value <= max;\n});\n\nconst updateToCurrencies = () => {\n  if (fromCurrency.value) {\n    const relevantOfferings = state.offerings.filter(offering =>\n      offering.data.payin.currencyCode === fromCurrency.value\n    );\n    const payoutCurrencies = new Set();\n    relevantOfferings.forEach(offering => {\n      payoutCurrencies.add(offering.data.payout.currencyCode);\n    });\n    state.payoutCurrencies = Array.from(payoutCurrencies);\n    isToCurrencyEnabled.value = true;\n  } else {\n    state.payoutCurrencies = [];\n    isToCurrencyEnabled.value = false;\n  }\n};\n\nconst getFilteredOfferings = () => {\n  if (fromCurrency.value && toCurrency.value) {\n    filteredOfferings.value = filterOfferings(fromCurrency.value, toCurrency.value);\n  }\n};\n\nconst selectOffering = (selectedOffering) => {\n  offering.value = selectedOffering;\n  setOffering(selectedOffering);\n  verifyCredentials();\n  step.value = 2;\n};\n\nconst calculateTheyGet = () => {\n  if (amount.value && offering.value) {\n    theyGet.value = formatAmount(amount.value * offering.value.data.payoutUnitsPerPayinUnit);\n  }\n};\n\nconst validateAndSubmit = () => {\n  if (!amount.value) {\n    alert('Please enter the amount.');\n    return;\n  }\n\n  for (const key in offering.value.data.payout.methods[0].requiredPaymentDetails.properties) {\n    if (!paymentDetails.value[key]) {\n      alert(`Please enter ${offering.value.data.payout.methods[0].requiredPaymentDetails.properties[key].title}.`);\n      return;\n    }\n\n    // check if property has pattern\n    const offeringDetailsPattern = offering.value.data.payout.methods[0].requiredPaymentDetails.properties[key].pattern;\n\n    if(offeringDetailsPattern && !paymentDetails.value[key].match(offeringDetailsPattern)){\n      alert(`Please enter a valid ${offering.value.data.payout.methods[0].requiredPaymentDetails.properties[key].title}.`);\n      return;\n    }\n  }\n\n  submitRequest();\n};\n\nconst submitRequest = async () => {\n  submitLoading.value = true\n  await createExchange(offering.value, amount.value, paymentDetails.value)\n  router.push('/dashboard');\n};\n\nconst verifyCredentials = () => {\n  if (needsCredentials.value) {\n    localStorage.setItem('selectedOffering', JSON.stringify(offering.value));\n    router.push('/credentials');\n  }\n};\n\nconst checkExistingSelectedOffering = () => {\n  if (localStorage.getItem('selectedOffering')) {\n    const offeringObject = JSON.parse(localStorage.getItem('selectedOffering'));\n    offering.value = getOfferingById(offeringObject.metadata.id);\n    localStorage.removeItem('selectedOffering');\n    step.value = 2;\n  }\n};\n</script>\n"],"version":3}